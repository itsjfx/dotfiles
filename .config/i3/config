# i3 config file (v4)

# bright blue selector
client.focused #4C7899 #088FC1 #FFFFFF #F41B7C #770404

set $mod Mod4
set $alt Mod1
set $TERMINAL alacritty 

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:monospace 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 12


# Only enable gaps on a workspace when there is at least one container
#smart_gaps on

# Only enable outer gaps when there is exactly one container
#smart_gaps inverse_outer

# icons
for_window [class=".*"] title_window_icon yes
#for_window [class=".*"] title_window_icon padding 3px
# bold title
for_window [class=".*"] title_format "<b>%title</b>"

# screenshotting with flameshot
bindsym Print exec flameshot screen -c
bindsym Control+Shift+Print exec flameshot full -c
bindsym Control+Print exec flameshot gui

# TODO: does this stuff _actually_ belong here
exec --no-startup-id exec dunst
# Melbourne, AU
exec --no-startup-id exec redshift -l '-37.8103409:144.9728712' -t '6500:3200'
exec --no-startup-id exec "$HOME/lib/polybar/launch.sh"
exec --no-startup-id exec "$HOME/.fehbg"
exec --no-startup-id exec "$HOME/lib/streamdeck.py"
# https://github.com/lincheney/i3-automark
exec --no-startup-id exec "$HOME/lib/external/i3-automark/i3-automark.py" --focused-only
# #1b1b25 or #4a4a4a
exec --no-startup-id exec alttab -fg "#d58681" -bg "#1b1b25" -frame "#eb564d" -t 132x150 -i 127x64 -d 0 -bw 0 -inact "#1b1b25" -font xft:sans-12 -fg white

bindsym XF86MonBrightnessUp exec --no-startup-id $HOME/lib/notify/brightness.sh up
bindsym XF86MonBrightnessDown exec --no-startup-id $HOME/lib/notify/brightness.sh down

# where title is WM_NAME from xprop

for_window [title="Playwright Inspector"] floating enable

for_window [title="KCalc"] floating enable
for_window [title="^Android Emulator*"] floating enable


# https://github.com/ValveSoftware/steam-for-linux/issues/1040
for_window [class="^steam$"] floating enable
for_window [class="^steam$" title="^Steam$"] floating disable


# TODO: does this actually do anything
# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.
# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- sh -c 'i3lock --nofork & xset dpms force off'

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet
exec --no-startup-id blueman-applet

# TODO: I don't even think I use this
# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the first scratchpad window
bindsym $mod+minus scratchpad show

# Show the sup-mail scratchpad window, if any.
#bindsym mod4+s [title="^Sup ::"] scratchpad show

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
#bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10%
#bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10%
#bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
#bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym XF86AudioRaiseVolume exec --no-startup-id $HOME/lib/notify/volume.sh up
bindsym XF86AudioLowerVolume exec --no-startup-id $HOME/lib/notify/volume.sh down
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle

# clipboard hack
bindsym $mod+Shift+v exec --no-startup-id sleep 0.5 && xdotool type --clearmodifiers --delay=30 "$(xclip -selection clipboard -r -o)"

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Shift+Return exec i3-sensible-terminal
bindsym $mod+Return exec --no-startup-id $TERMINAL

# kill focused window
bindsym $mod+Shift+q kill
bindsym $alt+F4 kill

#bindsym $mod+Shift+d exec --no-startup-id st bash -c 'eval $(compgen -c | fzf)'
# start dmenu (a program launcher)
#bindsym $mod+d exec --no-startup-id dmenu_run

#bindsym $mod+d exec rofi -show run
bindsym $mod+d exec rofi -show drun
bindsym $mod+Shift+d exec rofi -show run
bindsym $mod+Shift+f exec "$HOME/lib/rofi/firefox.sh"
bindsym $mod+Shift+p exec "$HOME/lib/rofi/power-menu.sh"
bindsym $mod+Shift+c exec "$HOME/lib/rofi/code.sh"
bindsym $mod+Shift+m exec "$HOME/lib/rofi/display.sh"

# vim keys
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# vim keys
# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# move workspaces across monitors
# $mod + Ctrl + , or .
bindsym $mod+Ctrl+greater move workspace to output right
bindsym $mod+Ctrl+less move workspace to output left

# split in horizontal orientation
#bindsym $mod+h split h

# split in vertical orientation
#bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
#bindsym $mod+s layout stacking
bindsym $mod+c layout tabbed
bindsym $mod+x layout toggle split

# MARKS
bindsym $mod+q [con_mark="Q"] focus
bindsym $mod+w [con_mark="W"] focus
bindsym $mod+e [con_mark="E"] focus
bindsym $mod+r [con_mark="R"] focus
bindsym $mod+t [con_mark="T"] focus
bindsym $mod+y [con_mark="Y"] focus
bindsym $mod+u [con_mark="U"] focus
bindsym $mod+i [con_mark="I"] focus
bindsym $mod+o [con_mark="O"] focus
bindsym $mod+p [con_mark="P"] focus

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# monitors
workspace $ws1 output DP-2
workspace $ws2 output HDMI-1

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
#bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# TODO: something nicer, maybe with rofi
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+v mode "default"
}

bindsym $mod+v mode "resize"

# bg
# gaps fix
for_window [class="^.*"] border pixel 0
hide_edge_borders both

gaps inner 15
gaps outer 10
