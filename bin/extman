#!/usr/bin/env bash

set -eu -o pipefail

print_help() {
    prog="$(basename "$0")"
    cat <<EOF >&2
Usage:  $prog list         - List staged extensions
        $prog diff         - Compare installed and staged extensions
        $prog install      - Install all staged extensions
        $prog clean        - Clean unstaged extensions
        $prog help         - Print this help message
EOF
}

yaml2json() {
    python3 -c 'import sys, yaml, json; [json.dump(doc, sys.stdout) for doc in yaml.safe_load_all(sys.stdin)]'
}


# https://stackoverflow.com/a/3232082
confirm() {
    local response
    read -r -p "$@ [y/n] " response
    response="${response,,}" # tolower
    [[ "$response" =~ ^(yes|y)$ ]]
}

extensions="$(cat "$HOME"/.config/extman/extensions.yaml | yaml2json | jq -rce '.extensions[]')"
extensions=( $extensions )

main() {
    action="${1:-}"
    shift || true
    case "$action" in
        list)
            local _extensions
            if [[ "${1-}" == --code ]]; then
                _extensions="$(code --list-extensions)"
            else
                _extensions="$(<<<"${extensions[@]}" jq -re .name)"
            fi
            echo "$_extensions" | sort -u | tr '[:upper:]' '[:lower:]'
            ;;
        diff)
            diff="$(git config --get interactive.diffFilter)"
            $diff <(main list --code) <(main list) || true
            ;;
        install)
            for extension in $(main list); do
                code --install-extension "$extension"
            done
           ;;
        clean)
            for extension in $(comm -23 <(main list --code) <(main list)); do
                if confirm "Uninstall $extension ?"; then
                    code --uninstall-extension "$extension"
                fi
            done
            ;;
        *)
            print_help
            ;;
    esac
}

main "$@"
